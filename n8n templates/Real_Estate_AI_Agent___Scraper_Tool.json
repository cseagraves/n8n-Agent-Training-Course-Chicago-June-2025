{
  "name": "Real Estate AI Agent + Scraper Tool",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -640,
        -240
      ],
      "id": "2574b67a-d034-4a66-8286-ee195772ec7a",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "url": "https://r.jina.ai/https://www.trulia.com/CA/Los_Angeles/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -420,
        -240
      ],
      "id": "48a04b13-69dc-4f16-851d-e0132b487a24",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "TbzuHkcnbFbrHVyp",
          "name": "Jina AI"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.data }}",
        "schemaType": "manual",
        "inputSchema": "{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"title\": \"RealEstateListing\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"results\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"address\": {\n            \"type\": \"string\",\n            \"description\": \"Full address of the property, including street, city, state, and ZIP code.\"\n          },\n          \"price\": {\n            \"type\": \"number\",\n            \"description\": \"Final sale price or listing price of the property.\"\n          },\n          \"bedrooms\": {\n            \"type\": \"integer\",\n            \"description\": \"Number of bedrooms in the property.\"\n          },\n          \"bathrooms\": {\n            \"type\": \"number\",\n            \"description\": \"Number of bathrooms in the property (can include fractional values, e.g., 2.5).\"\n          },\n          \"size\": {\n            \"type\": \"integer\",\n            \"description\": \"Square footage of the property (if available).\"\n          },\n          \"sale_date\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"description\": \"Date the property was sold or listed (in YYYY-MM-DD format).\"\n          },\n          \"url\": {\n            \"type\": \"string\",\n            \"format\": \"uri\",\n            \"description\": \"URL of the property listing on Trulia.\"\n          },\n          \"realtor\": {\n            \"type\": \"string\",\n            \"description\": \"Name of the realtor or agency handling the sale.\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"enum\": [\"Single-family\", \"Condo\", \"Townhome\", \"Apartment\", \"Other\"],\n            \"description\": \"Type of home (e.g., Single-family, condo, townhome).\"\n          },\n          \"price_per_sqft\": {\n            \"type\": \"number\",\n            \"description\": \"Calculated price per square foot (price / size).\"\n          },\n          \"features\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"Additional features of the property (e.g., 'Pool', 'Garage', 'Fireplace').\"\n            }\n          },\n          \"location\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"city\": {\n                \"type\": \"string\",\n                \"description\": \"City where the property is located.\"\n              },\n              \"state\": {\n                \"type\": \"string\",\n                \"description\": \"State where the property is located.\"\n              },\n              \"zip_code\": {\n                \"type\": \"string\",\n                \"description\": \"ZIP code of the property.\"\n              },\n              \"neighborhood\": {\n                \"type\": \"string\",\n                \"description\": \"Neighborhood or district where the property is located.\"\n              }\n            },\n            \"required\": [\"city\", \"state\", \"zip_code\"]\n          },\n          \"status\": {\n            \"type\": \"string\",\n            \"enum\": [\"For Sale\", \"Sold\", \"Pending\", \"Under Contract\"],\n            \"description\": \"Current status of the property.\"\n          },\n          \"photos\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\",\n              \"format\": \"uri\",\n              \"description\": \"URLs of photos of the property.\"\n            }\n          }\n        },\n        \"required\": [\"address\", \"price\", \"bedrooms\", \"bathrooms\", \"url\", \"type\", \"status\"]\n      }\n    }\n  },\n  \"required\": [\"results\"]\n}",
        "options": {
          "systemPromptTemplate": "=You are an expert data extractor. Analyze the given data and extract detailed information about recently sold properties. For each property, provide the following details:\n\n1. \"address\": Full address of the property.\n2. \"price\": Final sale price of the property.\n3. \"bedrooms\": Number of bedrooms.\n4. \"bathrooms\": Number of bathrooms.\n5. \"size\": Square footage of the property (if available).\n6. \"sale_date\": Date the property was sold.\n7. \"url\": URL of the property listing.\n8. \"realtor\": Name of the realtor or agency handling the sale.\n9. \"type\": Type of home (e.g., Single-family, condo, townhome).\n10. \"price_per_sqft\": Calculate the price per square foot using the formula: `price / size` (if both are available).\n\nAlways output the data in a JSON array called `results`, with each property represented as an object containing the above keys."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1,
      "position": [
        -200,
        -240
      ],
      "id": "d9b48728-acdc-47ba-8ae9-e72949224787",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "model": "qwen/qwq-32b:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -180,
        -40
      ],
      "id": "55d344bc-66fe-4197-a0ca-780e5b514acb",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "L2k6qCxqND86fdhH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.results",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        -360
      ],
      "id": "60432ca0-f2e6-43c2-8bef-5002b1d2e9e3",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1FP8MTPa-0scQ_dR5g5RFJ5AjUymocKPC8iyG3t56MPo",
          "mode": "list",
          "cachedResultName": "Real Estate Agent Information",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FP8MTPa-0scQ_dR5g5RFJ5AjUymocKPC8iyG3t56MPo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1FP8MTPa-0scQ_dR5g5RFJ5AjUymocKPC8iyG3t56MPo/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price",
              "displayName": "price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "bedrooms",
              "displayName": "bedrooms",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "bathrooms",
              "displayName": "bathrooms",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "size",
              "displayName": "size",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "sale_date",
              "displayName": "sale_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "realtor",
              "displayName": "realtor",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "type",
              "displayName": "type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "price_per_sqft",
              "displayName": "price_per_sqft",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        340,
        -360
      ],
      "id": "f77c5839-f3f1-4385-9453-da09f2a4d166",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "AMDI3oxmV22B3yCS",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Objective:\nThe AI agent is tasked with analyzing the real estate market to provide actionable insights and recommendations specifically for real estate agents. Using the provided dataset, the agent will extract key information about properties, identify trends, and offer strategies to help agents close deals, attract clients, and stay competitive in the market.\n\nInput data about all the properties will come from here: {{ $json.output }}\n\nInput Data Structure:\nThe dataset consists of the following columns:\n\nAddress : The physical location of the property.\nPrice : The selling price of the property (in dollars).\nBedrooms : The number of bedrooms in the property.\nBathrooms : The number of bathrooms in the property.\nSize : The total square footage of the property.\nSale Date : The date when the property was sold.\nURL : A link to the property listing online.\nRealtor : The name or company of the real estate agent handling the sale.\nType : The type of property (e.g., single-family home, condo, townhouse).\nPrice Per Sqft : The cost per square foot of the property.\nStatus : The current status of the property (e.g., Sold, Active, Pending).\nInstructions for the AI Agent:\nStep 1: Data Extraction and Cleaning\nParse the input data to ensure all fields are correctly identified and formatted.\nHandle missing values appropriately by either estimating them (if possible) or excluding incomplete records.\nConvert dates into a standardized format for easier analysis.\nStep 2: Descriptive Statistics\nGenerate summary statistics for the dataset, focusing on metrics relevant to real estate agents:\n\nAverage and median prices for different property types.\nDistribution of sales by neighborhood or area.\nMost common property configurations (e.g., 3-bedroom/2-bathroom homes).\nFrequency of sales over time (e.g., monthly or quarterly trends).\nStep 3: Market Trends and Patterns\nIdentify notable trends and patterns that can inform an agent's strategy:\n\nHow do prices vary by property type or neighborhood?\nAre there seasonal fluctuations in sales activity or pricing?\nWhich neighborhoods show the highest demand or fastest turnover rates?\nIs there a correlation between specific features (e.g., number of bedrooms/bathrooms) and sale success?\nStep 4: Competitive Analysis\nCompare the performance of properties listed by other realtors:\n\nIdentify top-performing realtors in terms of sales volume or average sale price.\nHighlight any unique selling points or marketing strategies used by successful agents.\nBenchmark your listings against competitors in terms of pricing, time on market, and buyer interest.\nStep 5: Recommendations for Agents\nBased on the analysis, provide actionable recommendations tailored to real estate agents:\n\nPricing Strategies :\nSuggest optimal pricing ranges for different property types based on recent sales data.\nAdvise on adjusting prices mid-listing if necessary.\nMarketing Tactics :\nRecommend high-impact marketing channels (e.g., social media, open houses) for specific demographics.\nHighlight features that appeal most to buyers in certain neighborhoods.\nClient Attraction :\nOffer tips for attracting first-time buyers, luxury buyers, or investors.\nProvide guidance on how to upsell additional services (e.g., staging, financing assistance).\nNegotiation Tips :\nShare insights on common negotiation tactics used by successful agents.\nSuggest ways to address buyer concerns or objections during negotiations.\nStep 6: Conclusion\nSummarize the key findings from the analysis:\n\nWhat are the most important takeaways regarding the current state of the real estate market?\nWhat opportunities or challenges exist for agents trying to close deals or attract new clients?\nReiterate the importance of staying informed about market dynamics and adapting strategies accordingly.\nExample Output Format:\nSummary Statistics:\nTotal Properties Analyzed: X\nAverage Sale Price: $Y\nMedian Days on Market: Z\nMost Popular Property Type: A\nHighest Demand Neighborhood: B\nLowest Inventory Area: C\nMarket Trends:\nSales activity peaks during [season/month].\nCondos sell faster than single-family homes but at lower price points.\nNeighborhood D has seen a surge in buyer interest due to new developments.\nRecommendations for Agents:\nPricing : Set initial asking prices slightly below comparable listings in high-demand areas to generate quick offers.\nMarketing : Use virtual tours and drone footage to showcase properties with large outdoor spaces.\nClient Attraction : Focus on offering personalized service to millennial buyers, who prioritize modern amenities like smart home technology.\nNegotiation : Be prepared to counter lowball offers with data-driven justifications for the property’s value.\nConclusion:\nThe real estate market presents both opportunities and challenges for agents. By leveraging these insights, you can refine your strategies, better serve your clients, and achieve greater success in closing deals. Stay proactive, adapt to changing market conditions, and use data to drive decision-making.",
        "options": {
          "systemMessage": "You are a detailed real estate analyst."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        160,
        -100
      ],
      "id": "7ddcd579-7018-4570-87d1-d85bd11f225d",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "qwen/qwen-2.5-72b-instruct:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        180,
        100
      ],
      "id": "b065383e-beec-4f86-bba1-af3208111b08",
      "name": "OpenRouter Chat Model1",
      "credentials": {
        "openRouterApi": {
          "id": "L2k6qCxqND86fdhH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "options": {
          "systemMessage": "Based on the input you get, provide a summary in a structured format. Do not say things like: \"here's the summary\" instead just say \"Here is the Real Estate Market Analysis:\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        520,
        -100
      ],
      "id": "bf8cb64c-4f94-4662-b62a-10cff5319bdb",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": "google/gemini-2.0-pro-exp-02-05:free",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        560,
        120
      ],
      "id": "b307404d-42e3-4f2c-99a1-3a233a6947ea",
      "name": "OpenRouter Chat Model2",
      "credentials": {
        "openRouterApi": {
          "id": "L2k6qCxqND86fdhH",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "tinrovic@gmail.com",
        "subject": "Real Estate Market Analysis",
        "message": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        880,
        -100
      ],
      "id": "80b44a0e-d116-4af6-aae6-92692a7a7f39",
      "name": "Gmail",
      "webhookId": "236ee4af-89ed-49a0-ba75-9ca69c787292",
      "credentials": {
        "gmailOAuth2": {
          "id": "VPm6rBKSCF2OLDOv",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          },
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a11fb844-c99a-47d6-8d8b-351640c2a9b6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7a31c35f6db673f223373f1c93209851594a325e7eca636c28089efb87cb7f0e"
  },
  "id": "Pa878FJVSOF76CIS",
  "tags": []
}