name: Convert README to PDF

permissions:
  contents: write

on:
  push:
    branches: [ main, master ]
    paths: [ 'README.md' ]
  workflow_dispatch:

jobs:
  convert-to-pdf:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Pandoc, wkhtmltopdf, and Emoji Font
      run: |
        sudo apt-get update
        sudo apt-get install -y pandoc wkhtmltopdf fonts-noto-color-emoji

    - name: Download GitHub Markdown CSS
      run: |
        curl -sSL https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.5.1/github-markdown.min.css -o github-markdown.css

    - name: Create print CSS for margins and print styling
      run: |
        cat <<EOF > readme-print.css
        @media print {
          body { margin: 0; }
          .markdown-body { box-shadow: none; border: none; max-width: 100%; padding: 0; }
          img { max-width: 100%; height: auto; }
        }
        EOF

    - name: Create emoji font CSS
      run: |
        cat <<EOF > emoji-font.css
        body, .markdown-body {
          font-family: "Noto Color Emoji", "Segoe UI Emoji", "Apple Color Emoji", "Twemoji Mozilla", "Android Emoji", "EmojiSymbols", "Symbola", sans-serif;
        }
        EOF

    - name: Convert README.md to HTML using Pandoc with GitHub style and emoji font
      run: |
        pandoc README.md \
          --from gfm \
          --to html5 \
          --standalone \
          --css github-markdown.css \
          --css readme-print.css \
          --css emoji-font.css \
          --metadata title="" \
          --output README.html

    - name: Convert HTML to PDF
      run: |
        wkhtmltopdf \
          --enable-local-file-access \
          --margin-top 25mm \
          --margin-bottom 25mm \
          --margin-left 20mm \
          --margin-right 20mm \
          --page-size Letter \
          README.html \
          AI-Agent-Real-Estate-Workshop-Guide.pdf

    - name: Check if PDF was created
      run: |
        if [ -f "AI-Agent-Real-Estate-Workshop-Guide.pdf" ]; then
          echo "‚úÖ PDF successfully created"
          ls -la "AI-Agent-Real-Estate-Workshop-Guide.pdf"
        else
          echo "‚ùå PDF creation failed"
          exit 1
        fi

    - name: Commit and push PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Add the PDF file
        git add "AI-Agent-Real-Estate-Workshop-Guide.pdf"

        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üìÑ Auto-update: Convert README to PDF [skip ci]"
          git push
        fi

    - name: Upload PDF as artifact
      uses: actions/upload-artifact@v4
      with:
        name: workshop-guide-pdf
        path: "AI-Agent-Real-Estate-Workshop-Guide.pdf"
        retention-days: 90