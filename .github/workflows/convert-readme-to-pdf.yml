name: Convert README to PDF

on:
  push:
    branches: [ main, master ]
    paths: [ 'README.md' ]
  workflow_dispatch:

jobs:
  convert-to-pdf:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install -g showdown puppeteer

    - name: Convert README to PDF
      run: |
        # Create a temporary CSS file for better styling
        cat > temp-style.css << 'EOF'
        body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
        }
        
        h1, h2, h3, h4, h5, h6 {
          color: #2c3e50;
          margin-top: 24px;
          margin-bottom: 16px;
        }
        
        h1 {
          border-bottom: 2px solid #eaecef;
          padding-bottom: 10px;
        }
        
        h2 {
          border-bottom: 1px solid #eaecef;
          padding-bottom: 8px;
        }
        
        code {
          background-color: #f6f8fa;
          border-radius: 3px;
          padding: 2px 4px;
          font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
        }
        
        pre {
          background-color: #f6f8fa;
          border-radius: 6px;
          padding: 16px;
          overflow: auto;
        }
        
        blockquote {
          border-left: 4px solid #dfe2e5;
          margin: 0;
          padding: 0 16px;
          color: #6a737d;
        }
        
        table {
          border-collapse: collapse;
          width: 100%;
          margin: 16px 0;
        }
        
        table th, table td {
          border: 1px solid #dfe2e5;
          padding: 8px 12px;
          text-align: left;
        }
        
        table th {
          background-color: #f6f8fa;
          font-weight: 600;
        }
        
        a {
          color: #0366d6;
          text-decoration: none;
        }
        
        a:hover {
          text-decoration: underline;
        }
        
        .page-break {
          page-break-before: always;
        }
        
        @media print {
          body {
            margin: 0;
            padding: 20px;
          }
        }
        EOF
        
        # Convert README.md to HTML using showdown
        showdown makehtml -i README.md -o temp-readme.html
        
        # Create complete HTML file with CSS styling
        cat > temp-complete.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>AI Agent Real Estate Workshop Guide</title>
          <style>
        EOF
        
        # Add CSS content to HTML
        cat temp-style.css >> temp-complete.html
        
        cat >> temp-complete.html << 'EOF'
          </style>
        </head>
        <body>
        EOF
        
        # Add HTML content
        cat temp-readme.html >> temp-complete.html
        
        cat >> temp-complete.html << 'EOF'
        </body>
        </html>
        EOF
        
        # Create PDF conversion script
        cat > convert-to-pdf.js << 'EOF'
        const puppeteer = require('puppeteer');
        const fs = require('fs');
        
        (async () => {
          try {
            console.log('üöÄ Starting PDF conversion...');
            
            const browser = await puppeteer.launch({
              headless: true,
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            
            const page = await browser.newPage();
            
            console.log('üìÑ Loading HTML content...');
            const htmlContent = fs.readFileSync('temp-complete.html', 'utf8');
            await page.setContent(htmlContent, { waitUntil: 'networkidle0' });
            
            console.log('üé® Generating PDF...');
            await page.pdf({
              path: 'AI-Agent-Real-Estate-Workshop-Guide.pdf',
              format: 'A4',
              printBackground: true,
              margin: {
                top: '20mm',
                right: '20mm',
                bottom: '20mm',
                left: '20mm'
              }
            });
            
            await browser.close();
            console.log('‚úÖ PDF successfully created!');
            
          } catch (error) {
            console.error('‚ùå Error creating PDF:', error);
            process.exit(1);
          }
        })();
        EOF
        
        # Execute PDF conversion
        node convert-to-pdf.js
        
        # Clean up temporary files
        rm temp-style.css temp-readme.html temp-complete.html convert-to-pdf.js

    - name: Check if PDF was created
      run: |
        if [ -f "AI-Agent-Real-Estate-Workshop-Guide.pdf" ]; then
          echo "‚úÖ PDF successfully created"
          ls -la "AI-Agent-Real-Estate-Workshop-Guide.pdf"
        else
          echo "‚ùå PDF creation failed"
          exit 1
        fi

    - name: Commit and push PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the PDF file
        git add "AI-Agent-Real-Estate-Workshop-Guide.pdf"
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "üìÑ Auto-update: Convert README to PDF [skip ci]"
          git push
        fi

    - name: Upload PDF as artifact
      uses: actions/upload-artifact@v4
      with:
        name: workshop-guide-pdf
        path: "AI-Agent-Real-Estate-Workshop-Guide.pdf"
        retention-days: 90 